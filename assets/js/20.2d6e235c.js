(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{630:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs之md5加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs之md5加密"}},[t._v("🌙")]),t._v(" NodeJS之MD5加密")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://juejin.im/post/58fc1f925c497d0058fc3015",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nodejs进阶：MD5入门介绍及crypto模块的应用"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1-md5加密特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-md5加密特点"}},[t._v("🌙")]),t._v(" 1.MD5加密特点")]),t._v(" "),a("ul",[a("li",[t._v("MD加密是函数型加密。每次加密的结果一定相同，没有随机位。")]),t._v(" "),a("li",[t._v("不论加密的内容多长多短，永远都是32位英文字母、数字混合")]),t._v(" "),a("li",[t._v("仅仅改一个字符，密文都会大变。")]),t._v(" "),a("li",[t._v("MD5没有反解密函数破解的可能，所谓的破解MD5工具，都是通过字典的模式（穷举法），通过大量列举明-密对应的字典，找到明码")])]),t._v(" "),a("p",[t._v("MD5常用来做版本校验。可以比对两个软件、文件是否完全一致。")]),t._v(" "),a("h2",{attrs:{id:"_2-nodejs使用md5加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nodejs使用md5加密"}},[t._v("🌙")]),t._v(" 2. NodeJS使用MD5加密")]),t._v(" "),a("p",[t._v("node中自带模块"),a("code",[t._v("crypto")]),t._v("可以用来MD5加密：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crypto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncrypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("algorithm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 算法：'sha256'、 'sha512'、'md5'等")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" md5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'md5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("由于MD5没有解密函数，当用户注册之后密码通过加密保存进数据库。当用户再次登陆输入密码之后，我们需要对用户提交的密码再次进行加密，然后与数据库中的加密之后的密码进行比对，从而判断出用户密码是否输入正确。")])])}),[],!1,null,null,null);s.default=e.exports}}]);